<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetCategoriesAsync(RequestContext)">
<example>
This sample shows how to call GetCategoriesAsync and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

Response response = await client.GetCategoriesAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("categoryId").ToString());
Console.WriteLine(result[0].GetProperty("categoryName").ToString());
Console.WriteLine(result[0].GetProperty("description").ToString());
Console.WriteLine(result[0].GetProperty("picture").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("productId").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("productName").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("categoryId").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("categoryId").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("categoryName").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("description").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("picture").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("quantityPerUnit").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("unitPrice").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("unitsInStock").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("unitsOnOrder").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("reorderLevel").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("discontinued").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Category</c>:
<code>{
  categoryId: number, # Required.
  categoryName: string, # Optional.
  description: string, # Optional.
  picture: string, # Optional.
  products: [
    {
      productId: number, # Required.
      productName: string, # Optional.
      categoryId: number, # Required.
      category: Category, # Optional.
      quantityPerUnit: string, # Optional.
      unitPrice: number, # Required.
      unitsInStock: number, # Required.
      unitsOnOrder: number, # Required.
      reorderLevel: number, # Required.
      discontinued: boolean, # Required.
    }
  ], # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetCategories(RequestContext)">
<example>
This sample shows how to call GetCategories and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

Response response = client.GetCategories();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("categoryId").ToString());
Console.WriteLine(result[0].GetProperty("categoryName").ToString());
Console.WriteLine(result[0].GetProperty("description").ToString());
Console.WriteLine(result[0].GetProperty("picture").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("productId").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("productName").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("categoryId").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("categoryId").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("categoryName").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("description").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("category").GetProperty("picture").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("quantityPerUnit").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("unitPrice").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("unitsInStock").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("unitsOnOrder").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("reorderLevel").ToString());
Console.WriteLine(result[0].GetProperty("products")[0].GetProperty("discontinued").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Category</c>:
<code>{
  categoryId: number, # Required.
  categoryName: string, # Optional.
  description: string, # Optional.
  picture: string, # Optional.
  products: [
    {
      productId: number, # Required.
      productName: string, # Optional.
      categoryId: number, # Required.
      category: Category, # Optional.
      quantityPerUnit: string, # Optional.
      unitPrice: number, # Required.
      unitsInStock: number, # Required.
      unitsOnOrder: number, # Required.
      reorderLevel: number, # Required.
      discontinued: boolean, # Required.
    }
  ], # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetCategoryAsync(Int32,RequestContext)">
<example>
This sample shows how to call GetCategoryAsync with required parameters and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

Response response = await client.GetCategoryAsync(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("quantityPerUnit").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitPrice").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsInStock").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsOnOrder").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("reorderLevel").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("discontinued").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Category</c>:
<code>{
  categoryId: number, # Required.
  categoryName: string, # Optional.
  description: string, # Optional.
  picture: string, # Optional.
  products: [
    {
      productId: number, # Required.
      productName: string, # Optional.
      categoryId: number, # Required.
      category: Category, # Optional.
      quantityPerUnit: string, # Optional.
      unitPrice: number, # Required.
      unitsInStock: number, # Required.
      unitsOnOrder: number, # Required.
      reorderLevel: number, # Required.
      discontinued: boolean, # Required.
    }
  ], # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetCategory(Int32,RequestContext)">
<example>
This sample shows how to call GetCategory with required parameters and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

Response response = client.GetCategory(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("quantityPerUnit").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitPrice").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsInStock").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsOnOrder").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("reorderLevel").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("discontinued").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Category</c>:
<code>{
  categoryId: number, # Required.
  categoryName: string, # Optional.
  description: string, # Optional.
  picture: string, # Optional.
  products: [
    {
      productId: number, # Required.
      productName: string, # Optional.
      categoryId: number, # Required.
      category: Category, # Optional.
      quantityPerUnit: string, # Optional.
      unitPrice: number, # Required.
      unitsInStock: number, # Required.
      unitsOnOrder: number, # Required.
      reorderLevel: number, # Required.
      discontinued: boolean, # Required.
    }
  ], # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetCategoryImageAsync(Int32,RequestContext)">
<example>
This sample shows how to call GetCategoryImageAsync with required parameters and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

Response response = await client.GetCategoryImageAsync(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetCategoryImage(Int32,RequestContext)">
<example>
This sample shows how to call GetCategoryImage with required parameters and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

Response response = client.GetCategoryImage(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PostCategoryImageAsync(Int32,RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call PostCategoryImageAsync with required parameters and request content and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

var data = new {};

Response response = await client.PostCategoryImageAsync(1234, RequestContent.Create(data), ContentType.ApplicationOctetStream);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("quantityPerUnit").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitPrice").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsInStock").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsOnOrder").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("reorderLevel").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("discontinued").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Category</c>:
<code>{
  categoryId: number, # Required.
  categoryName: string, # Optional.
  description: string, # Optional.
  picture: string, # Optional.
  products: [
    {
      productId: number, # Required.
      productName: string, # Optional.
      categoryId: number, # Required.
      category: Category, # Optional.
      quantityPerUnit: string, # Optional.
      unitPrice: number, # Required.
      unitsInStock: number, # Required.
      unitsOnOrder: number, # Required.
      reorderLevel: number, # Required.
      discontinued: boolean, # Required.
    }
  ], # Optional.
}
</code>

</remarks>
    </member>
    <member name="PostCategoryImage(Int32,RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call PostCategoryImage with required parameters and request content and parse the result.
<code><![CDATA[
var client = new CategoriesApiClient();

var data = new {};

Response response = client.PostCategoryImage(1234, RequestContent.Create(data), ContentType.ApplicationOctetStream);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryId").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("categoryName").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("category").GetProperty("picture").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("quantityPerUnit").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitPrice").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsInStock").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("unitsOnOrder").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("reorderLevel").ToString());
Console.WriteLine(result.GetProperty("products")[0].GetProperty("discontinued").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Category</c>:
<code>{
  categoryId: number, # Required.
  categoryName: string, # Optional.
  description: string, # Optional.
  picture: string, # Optional.
  products: [
    {
      productId: number, # Required.
      productName: string, # Optional.
      categoryId: number, # Required.
      category: Category, # Optional.
      quantityPerUnit: string, # Optional.
      unitPrice: number, # Required.
      unitsInStock: number, # Required.
      unitsOnOrder: number, # Required.
      reorderLevel: number, # Required.
      discontinued: boolean, # Required.
    }
  ], # Optional.
}
</code>

</remarks>
    </member>
  </members>
</doc>